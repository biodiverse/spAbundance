useDynLib(spAbundance, .registration=TRUE)

export(simNMix)
export(simMsNMix)
export(simAbund)
export(simMsAbund)
export(NMix)
export(spNMix)
export(msNMix)
export(sfMsNMix)
export(abund)
export(spAbund)
export(sfMsAbund)
export(waicAbund)
export(ppcAbund)

S3method("predict", "NMix")
S3method("print", "NMix")
S3method("fitted", "NMix")
S3method("summary", "NMix")

S3method("summary", "ppcAbund")

# S3method("predict", "spNMix")
S3method("print", "spNMix")
S3method("fitted", "spNMix")
S3method("summary", "spNMix")

# S3method("predict", "msNMix")
S3method("print", "msNMix")
# S3method("fitted", "msNMix")
S3method("summary", "msNMix")

# S3method("predict", "sfMsNMix")
S3method("print", "sfMsNMix")
# S3method("fitted", "sfMsNMix")
S3method("summary", "sfMsNMix")

S3method("predict", "abund")
S3method("print", "abund")
S3method("fitted", "abund")
S3method("summary", "abund")

# S3method("predict", "spAbund")
S3method("print", "spAbund")
S3method("fitted", "spAbund")
S3method("summary", "spAbund")

# S3method("predict", "sfMsAbund")
S3method("print", "sfMsAbund")
S3method("fitted", "sfMsAbund")
S3method("summary", "sfMsAbund")

importFrom("stats", "dist", "dnbinom", "rbinom", "rnorm", "rnbinom", "rpois", "coefficients", "glm", "is.empty.model", "model.matrix", "model.response", "terms", "runif", "quantile", "dbinom", "var", "rgamma", "sd")
importFrom("coda", "mcmc", "gelman.diag", "mcmc.list", "effectiveSize")
importFrom("abind", "abind")
importFrom("RANN", "nn2")
importFrom("lme4", "findbars", "mkReTrms", "nobars")
importFrom("foreach", "foreach", "%do%", "%dopar%")
importFrom("doParallel", "registerDoParallel", "stopImplicitCluster")
importFrom("methods", "is")
